
import VerifyInterestedClient from "./Middlewares/VerifyInterestedClient.js";
import Register_Sessions from "./Controllers/Register_Sessions.js";
import Contact from "./Controllers/Contact.js";
// import {GetMeetDetails} from "./Utils/GetMeetDetails.js";
import Calendly_Meet_Integration from "./Controllers/Calendly_Meet_Integration.js";



  //these routes are defined and codes are written only requires minor modification to suit on a case by case basis..


export default function Routes(app){
  //login routes and registration routes :
  //the login and registraion routes works but we should or can use supabase auth system
  // the login and registraion routes doesnot have email verification integrated in it..
  //since login and registration routes are not required as of now...

   

   //admin routes to add a job...
   //CheckJobExistance is the middleware that checks if the job being added is already present to avoid duplicate records..
   //CheckJobExistance uses job ID as parameter , job id is generated by ()=>date.now()...it keeps the id unique..
  //  job adding by admin routes....here a auth is required for enabling only authenticated admin to add job and authenticated user 
  //LocalTokenValidator can be used 


   //this is the place where all the paid users will appear to the BDE and also the relevant jobs will also appear
   //my idea is that on clicking each of the paid user we open the student dashboard where all the details like education,
   // skills, jobs applied, interview status etc can be done..
   //apart from these only an admin can create a new admin or a paid user and the admin can post a job to db using the '''/admin/addjobs route'''


   
   //this is the route when a new user clicks on the try now button..it verifies the details and adds details to the database..
   app.post('/', VerifyInterestedClient , Register_Sessions);
   //this is the route that calandly posts on for sending meeting details..from here meeting details or sessions can be added to DB for sales people..
  //  app.post("/calendly-webhook",GetMeetDetails);
   //the routes that handles contact us page..
   app.post('/api/contact', Contact)
  //  app.post('/calendly-webhook',Calendly_Meet_Integration)
  
}

// LoginVerifier, LocalTokenValidator
// LoginVerifier, LocalTokenValidator